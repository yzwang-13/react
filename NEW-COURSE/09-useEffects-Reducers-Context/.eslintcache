[{"/Users/yingzhengwang/Desktop/Desktop/react/relearn/react-complete-guilde/NEW-COURSE/09-useEffects-Reducers-Context/src/index.js":"1","/Users/yingzhengwang/Desktop/Desktop/react/relearn/react-complete-guilde/NEW-COURSE/09-useEffects-Reducers-Context/src/App.js":"2","/Users/yingzhengwang/Desktop/Desktop/react/relearn/react-complete-guilde/NEW-COURSE/09-useEffects-Reducers-Context/src/components/MainHeader/MainHeader.js":"3","/Users/yingzhengwang/Desktop/Desktop/react/relearn/react-complete-guilde/NEW-COURSE/09-useEffects-Reducers-Context/src/components/Home/Home.js":"4","/Users/yingzhengwang/Desktop/Desktop/react/relearn/react-complete-guilde/NEW-COURSE/09-useEffects-Reducers-Context/src/components/Login/Login.js":"5","/Users/yingzhengwang/Desktop/Desktop/react/relearn/react-complete-guilde/NEW-COURSE/09-useEffects-Reducers-Context/src/components/MainHeader/Navigation.js":"6","/Users/yingzhengwang/Desktop/Desktop/react/relearn/react-complete-guilde/NEW-COURSE/09-useEffects-Reducers-Context/src/components/UI/Button/Button.js":"7","/Users/yingzhengwang/Desktop/Desktop/react/relearn/react-complete-guilde/NEW-COURSE/09-useEffects-Reducers-Context/src/components/UI/Card/Card.js":"8","/Users/yingzhengwang/Desktop/Desktop/react/relearn/react-complete-guilde/NEW-COURSE/09-useEffects-Reducers-Context/src/context/auth-context.js":"9"},{"size":169,"mtime":1616593928000,"results":"10","hashOfConfig":"11"},{"size":1466,"mtime":1620356354854,"results":"12","hashOfConfig":"11"},{"size":307,"mtime":1620356226293,"results":"13","hashOfConfig":"11"},{"size":250,"mtime":1616593928000,"results":"14","hashOfConfig":"11"},{"size":4650,"mtime":1620304852128,"results":"15","hashOfConfig":"11"},{"size":868,"mtime":1620356526020,"results":"16","hashOfConfig":"11"},{"size":353,"mtime":1616593928000,"results":"17","hashOfConfig":"11"},{"size":218,"mtime":1616593928000,"results":"18","hashOfConfig":"11"},{"size":124,"mtime":1620353809707,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1dby3j0",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/yingzhengwang/Desktop/Desktop/react/relearn/react-complete-guilde/NEW-COURSE/09-useEffects-Reducers-Context/src/index.js",[],["40","41"],"/Users/yingzhengwang/Desktop/Desktop/react/relearn/react-complete-guilde/NEW-COURSE/09-useEffects-Reducers-Context/src/App.js",["42"],"/Users/yingzhengwang/Desktop/Desktop/react/relearn/react-complete-guilde/NEW-COURSE/09-useEffects-Reducers-Context/src/components/MainHeader/MainHeader.js",[],"/Users/yingzhengwang/Desktop/Desktop/react/relearn/react-complete-guilde/NEW-COURSE/09-useEffects-Reducers-Context/src/components/Home/Home.js",[],"/Users/yingzhengwang/Desktop/Desktop/react/relearn/react-complete-guilde/NEW-COURSE/09-useEffects-Reducers-Context/src/components/Login/Login.js",["43","44"],"import React, {useState, useEffect, useReducer} from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\n\nconst Login = (props) => {\n    // const [enteredEmail, setEnteredEmail] = useState('');\n    // const [emailIsValid, setEmailIsValid] = useState();\n    // const [enteredPassword, setEnteredPassword] = useState('');\n    // const [passwordIsValid, setPasswordIsValid] = useState();\n    const [formIsValid, setFormIsValid] = useState(false);\n\n    const [emailState, dispatchEmail] = useReducer((lastState, action) => {\n\n        if (action.type === 'USER_INPUT') {\n            return {value: action.value, isValid: action.value.includes('@')};\n        }\n\n        if (action.type === 'INPUT_BLUR') {\n            return {value: lastState.value, isValid: lastState.value.includes('@')}\n        }\n\n        return {value: '', isValid: false}\n    }, {value: '', isValid: false});\n\n    const [passwordState, dispatchPassword] = useReducer((latestState, action)=>{\n        if (action.type === 'USER_INPUT') {\n            return {value: action.value, isValid: action.value.trim().length > 6}\n        }\n        if (action.type === 'VALIDATE') {\n            return {value: latestState.value, isValid: latestState.value.trim().length > 6 }\n        }\n        return {value: '', isValid: false}\n\n    },{value: '', isValid: false})\n\n    // useEffect(()=> {\n    //     console.log('Effect Running')\n    //\n    //     return ()=> {\n    //         console.log('Effect Cleanup')\n    //     }\n    // }, [])\n    //\n\n    const {isValid: emailIsValid} = emailState;\n    const {isValid: passwordIsValid} = passwordState;\n\n\n    useEffect(() => {\n\n        // store a timer in a constant\n        // perform update state only if user pause typing for more than 500 milsec\n        const handler = setTimeout(() => {\n            console.log('useEffect Checking form validity');\n            setFormIsValid(\n                emailState.isValid && passwordState.isValid\n            );\n        }, 500);\n\n        // return a cleanup function\n        return () => {\n            clearTimeout(handler);\n        }\n    }, [emailState.isValid, passwordState.isValid]);\n\n\n\n\n\n\n    const emailChangeHandler = (event) => {\n        dispatchEmail({type: 'USER_INPUT', value: event.target.value});\n        setFormIsValid(\n            emailState.isValid && passwordState.value.trim().length > 6\n        );\n    };\n\n    const passwordChangeHandler = (event) => {\n        // setEnteredPassword(event.target.value);\n        dispatchPassword({type: 'USER_INPUT', value: event.target.value});\n\n        setFormIsValid(\n            event.target.value.trim().length > 6 && emailState.isValid\n        );\n    };\n\n    const validateEmailHandler = () => {\n        dispatchEmail({type: 'INPUT_BLUR'});\n    };\n\n    const validatePasswordHandler = () => {\n        dispatchPassword({type: 'VALIDATE'});\n        // setPasswordIsValid(enteredPassword.trim().length > 6);\n    };\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n        props.onLogin(emailState.value, passwordState.value);\n    };\n\n    return (\n        <Card className={classes.login}>\n            <form onSubmit={submitHandler}>\n                <div\n                    className={`${classes.control} ${\n                        emailState.isValid === false ? classes.invalid : ''\n                    }`}\n                >\n                    <label htmlFor=\"email\">E-Mail</label>\n                    <input\n                        type=\"email\"\n                        id=\"email\"\n                        value={emailState.value}\n                        onChange={emailChangeHandler}\n                        onBlur={validateEmailHandler}\n                    />\n                </div>\n                <div\n                    className={`${classes.control} ${\n                        passwordState.isValid === false ? classes.invalid : ''\n                    }`}\n                >\n                    <label htmlFor=\"password\">Password</label>\n                    <input\n                        type=\"password\"\n                        id=\"password\"\n                        value={passwordState.value}\n                        onChange={passwordChangeHandler}\n                        onBlur={validatePasswordHandler}\n                    />\n                </div>\n                <div className={classes.actions}>\n                    <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n                        Login\n                    </Button>\n                </div>\n            </form>\n        </Card>\n    );\n};\n\nexport default Login;\n","/Users/yingzhengwang/Desktop/Desktop/react/relearn/react-complete-guilde/NEW-COURSE/09-useEffects-Reducers-Context/src/components/MainHeader/Navigation.js",[],"/Users/yingzhengwang/Desktop/Desktop/react/relearn/react-complete-guilde/NEW-COURSE/09-useEffects-Reducers-Context/src/components/UI/Button/Button.js",[],"/Users/yingzhengwang/Desktop/Desktop/react/relearn/react-complete-guilde/NEW-COURSE/09-useEffects-Reducers-Context/src/components/UI/Card/Card.js",[],"/Users/yingzhengwang/Desktop/Desktop/react/relearn/react-complete-guilde/NEW-COURSE/09-useEffects-Reducers-Context/src/context/auth-context.js",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":17,"column":8,"nodeType":"51","endLine":17,"endColumn":10,"suggestions":"52"},{"ruleId":"53","severity":1,"message":"54","line":47,"column":21,"nodeType":"55","messageId":"56","endLine":47,"endColumn":33},{"ruleId":"53","severity":1,"message":"57","line":48,"column":21,"nodeType":"55","messageId":"56","endLine":48,"endColumn":36},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'storedUserLoggedInInformation'. Either include it or remove the dependency array.","ArrayExpression",["60"],"no-unused-vars","'emailIsValid' is assigned a value but never used.","Identifier","unusedVar","'passwordIsValid' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"61","fix":"62"},"Update the dependencies array to be: [storedUserLoggedInInformation]",{"range":"63","text":"64"},[483,485],"[storedUserLoggedInInformation]"]